apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def keystorePropertiesFile = rootProject.file("keystore.properties")
// Initializes a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Loads the keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.shehuan.wanandroid"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        resConfigs "zh"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dexOptions {
        // Sets the maximum number of DEX processes
        // that can be started concurrently.
        maxProcessCount 8
        // Sets the maximum memory allocation pool size
        // for the dex operation.
        javaMaxHeapSize "4g"
        // Enables Gradle to pre-dex library dependencies.
        preDexLibraries true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // 清理无用资源
            shrinkResources true
            // 压缩优化
            zipAlignEnabled true
            // 支持本地化整理
            pseudoLocalesEnabled true

            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('release.apk')) {
                        def fileName = "WanAndroid_v${defaultConfig.versionName}_release.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
    }
    sourceSets {
//        main{
//            java.srcDirs=[
//                    'src/main/kotlin',
//                    'src/common/kotlin',
//                    'src/debug/kotlin',
//                    'src/release/kotlin',
//                    'src/staging/kotlin',
//                    'src/preproduction/kotlin',
//                    'src/debug/java',
//                    'src/release/java',
//                    'src/staging/java',
//                    'src/preproduction/java',
////                    'src/androidTest/java',
////                    'src/androidTest/kotlin'
//            ]
//        }
//        test {
//            java.srcDirs = ['src/test/']
//        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }
    
    productFlavors {
    }

    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:multidex:1.0.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.annotation:annotation:1.0.1'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.1.0-alpha01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    implementation 'com.github.SheHuan:NiceDialog:1.1.9'
    implementation 'com.github.SheHuan:RecyclerViewAdapter:1.2.6'
    implementation 'com.github.SheHuan:StatusView:1.0.5'
    implementation 'com.github.SheHuan:NiceImageView:1.0.3'

    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.google.android:flexbox:1.1.0'
    implementation 'org.litepal.android:kotlin:3.0.0'
    implementation 'com.wang.avi:library:2.1.3'

    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.1-alpha01'
    // Testing-only dependencies
    androidTestImplementation 'androidx.test:core:1.1.0-alpha01'
    androidTestImplementation 'androidx.test:core-ktx:1.1.0-alpha01'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0-alpha01'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.0-alpha01'
    androidTestImplementation 'androidx.test:runner:1.1.1-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1-alpha01'

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.1'
}
